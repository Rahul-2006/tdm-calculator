name: integration-tests
on:
  push:
    branches: [943-github-actions-cypress]

jobs:
  build-artfiact:
    runs-on: ubuntu-latest
    name: build & push image with mssql base image
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: build-and-push-image
        uses: docker/build-push-action@v1
        with:
          username: nclairesays
          password: Dogfood!1
          repository: nclairesays/tdm-test
          dockerfile: ./Dockerfile
          tag_with_ref: true
          tag_with_sha: true
          add_git_labels: true
          labels: description="TDM Calculator",maintained="tdm+cicd@hackforla.org"
  install-and-build:
    runs-on: ubuntu-latest
    # needs: build-artifact
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cypress Install
        uses: cypress-io/github-action@v2
        with:
          runTests: false
      - name: Install NPM
        uses: actions/setup-node@v2
        with:
          node-version: "14"
          cache: "npm"
      - name: Install Modules and Build
        run: |
          cd ./server
          npm install
          cd ../client
          npm install
          npm run build
      - name: Save build folder
        # uses: actions/upload-artifact@v2
        # with:
        #   name: build
        #   if-no-files-found: error
        #   path: build
        run: |
          pwd
          echo "inside current directory:"
          ls -al
          cd build
          echo "inside build"
          ls -al

  cypress-run:
    runs-on: ubuntu-latest
    needs: build-artifact
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: checkout directory
        run: pwd
          ls -al
      - name: Start Database
        run: ./.github/start-db.sh
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: npm start
          wait-on: "http://localhost:3000"
      - name: Cleanup
        if: ${{ always() }}
        run: |
          rm -rf ..?* .[!.]* *

  cypress-run-v2:
    runs-on: ubuntu-latest
    needs: build-artifact
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: checkout directory
        run: pwd
          ls -al
      - name: Start Database
        run: ./.github/start-db.sh
      - name: Start app
        run: node server.js
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: npm start
          wait-on: "http://localhost:3000"
      - name: Cleanup
        if: ${{ always() }}
        run: |
          rm -rf ..?* .[!.]* *

  # build-artifact-v2:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: nclairesays/tdm-test:latest
  #   steps:
  #     - name: Directory cleanup
  #       run: rm -rf ..?* .[!.]* *
  #     - name: Checkout Code
  #       uses: actions/checkout@v2
  #     - name: Build Artifact
  #       run: |
  #         pwd
  #         ls -al
  #         cd client
  #         ls -al
  #         npm run build
  #         ls -al
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: tdmapp
  #     - name: Dump Env
  #       run: |
  #         env | sort
  #         ls -la
  #     - name: Cleanup
  #       if: ${{ always() }}
  #       run: |
  #         rm -rf ..?* .[!.]* *

# jobs:
#   cypress-run:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v1
#       - name: Cypress run
#         uses: cypress-io/github-action@v2
#         with:
#           #build: npm run build
#           #start: npm start
#           spec: cypress/integration/project-calculations-no-auths/barrington-condos.spec.js
#           wait-on: https://tdmdev.azurewebsites.net/
#           record: true

#         env:
#           # pass the Dashboard record key as an environment variable
#           CYPRESS_RECORD_KEY: 331838a7-bd77-4de8-9a2f-6ca0ecb30414
#           # pass GitHub token to allow accurately detecting a build vs a re-run build
#           #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }
