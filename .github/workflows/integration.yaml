name: integration-tests
on:
  push:
    branches: [943-github-actions-cypress]

env:
  # pass GitHub token to allow accurately detecting a build vs a re-run build
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

jobs:
  # doesn't work:
  # build-artifact-v2:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: nclairesays/tdm-test:latest
  #   steps:
  #     - name: Directory cleanup
  #       run: rm -rf ..?* .[!.]* *
  #     - name: Checkout Code
  #       uses: actions/checkout@v2
  #     - name: Build Artifact
  #       run: |
  #         pwd
  #         ls -al
  #         cd client
  #         ls -al
  #         npm run build
  #         ls -al
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: tdmapp
  #         path: /build/
  #     - name: Dump Env
  #       run: |
  #         env | sort
  #         ls -la
  #     - name: Cleanup
  #       if: ${{ always() }}
  #       run: |
  #         rm -rf ..?* .[!.]* *

  install-and-build:
    runs-on: ubuntu-latest
    # needs: build-artifact
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Print npm and yarn versions
        run: |
          which npm
          npm --version
          which yarn
          yarn --version

      # - name: Install NPM
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: "14"
      #     cache: "npm"
      # - name: Print versions
      #   run: |
      #     which npm
      #     npm --version
      #     which yarn
      #     yarn --version
      # only install the dependencies without running any tests from root folder
      - name: Cypress Install
        uses: cypress-io/github-action@v2
        with:
          runTests: false
      - name: Install Modules and Build
        run: |
          cd ./server
          npm install
          cd ../client
          npm install
          npm run build
      - name: echo
        run: |
          pwd
          echo "****** inside root directory: ******"
          ls -al .
          pwd
          echo "****** inside client directory ******"
          ls -al ./client
      - name: Save to build folder in root directory
        uses: actions/upload-artifact@v2
        with:
          name: build
          if-no-files-found: error
          path: |
            ./client/build
      - name: Save to cypress folder in root directory
        uses: actions/upload-artifact@v2
        with:
          name: cypress
          if-no-files-found: error
          path: |
            ./cypress

  cypress-test:
    runs-on: ubuntu-latest
    needs: install-and-build
    services: # Define Docker containers to use for this job.
      backend-db: # Container ID for our database container
        image: mcr.microsoft.com/mssql/server:2017-latest # Image to pull from Docker Hub
        env:
          MSSQL_PID: Express
          SA_PASSWORD: Dogfood1!
          SQL_SERVER_NAME: localhost
          SQL_SERVER_PORT: 1434
          SQL_DATABASE_NAME: tdmdev
          SQL_USER_NAME: sa
          SQL_PASSWORD: Dogfood1!
          SQL_ENCRYPT: true
          SQL_TRUST_SERVER_CERTIFICATE: true
        ports:
          - 1434:1433 # TCP port to expose on Docker container and host environment
    container:
      image: tdmcalc/tdmapp:latest
      credentials:
        username: ${{  secrets.DOCKER_USERNAME }}
        password: ${{  secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download build folders ‚è¨
        uses: actions/download-artifact@v2
      - name: Display structure of downloaded files
        run: ls -R
      # - name: Install bash
      #   run: |
      #     apt update
      #     apt install bash
      - name: Start Database
        run: |
          chmod +x ./.github/start-db.sh
          ./.github/start-db.sh
      # TODO: code below works sort of.. tests run in pipeline but no db?
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          install: true
          working-directory: ./cypress
          start: npm start-all-servers
      - name: Cleanup
        if: ${{ always() }}
        run: |
          rm -rf ..?* .[!.]* *

          # node ./server/server.js

  cypress-run-v3:
    needs: install-and-build
    runs-on: ubuntu-latest
    container:
      image: tdmcalc/tdmapp:latest
      credentials:
        username: ${{  secrets.DOCKER_USERNAME }}
        password: ${{  secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: checkout directory
        run: |
          pwd
          ls -al
          ls -R
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: /home/runner/work/tdm-calculator/tdm-calculator/build
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: npm start
          wait-on: "http://localhost:3000"
      - name: Cleanup
        if: ${{ always() }}
        run: |
          rm -rf ..?* .[!.]* *

  cypress-run-v4:
    runs-on: ubuntu-latest
    container:
      image: tdmcalc/tdmapp:latest
      credentials:
        username: ${{  secrets.DOCKER_USERNAME }}
        password: ${{  secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: checkout directory
        run: pwd
          ls -al
      - name: Download Artifact
        uses: actions/download-artifact@v2
        # with:
        #   name: tdmapp
        #   path: /__w/tdmapp/tdmapp/build/
      - name: Display structure of downloaded files
        run: ls -R
      - name: Run server
        run: node ./server/server.js
      - name: Cypress run
        uses: cypress-io/github-action@v2.3.6
        with:
          start: npm start
          wait-on: "http://localhost:3000"
      - name: Cleanup
        if: ${{ always() }}
        run: |
          rm -rf ..?* .[!.]* *

# jobs:
#   cypress-run:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v1
#       - name: Cypress run
#         uses: cypress-io/github-action@v2
#         with:
#           #build: npm run build
#           #start: npm start
#           spec: cypress/integration/project-calculations-no-auths/barrington-condos.spec.js
#           wait-on: https://tdmdev.azurewebsites.net/
#           record: true

#         env:
#           # pass the Dashboard record key as an environment variable
#           CYPRESS_RECORD_KEY: 331838a7-bd77-4de8-9a2f-6ca0ecb30414
#           # pass GitHub token to allow accurately detecting a build vs a re-run build
#           #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }
